name: Android CI with Test Reporting

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: actions/setup-android@v2
        with:
          api-level: 33
          target: google_apis
          components: platform-tools,build-tools-33.0.0

      - name: Add platform tools to PATH
        run: echo "${ANDROID_HOME}/platform-tools" >> $GITHUB_PATH

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $ANDROID_SDK_ROOT
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Enable Gradle Daemon
        run: echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties

      - name: Download Dependencies
        run: ./gradlew dependencies

      - name: Run Lint
        run: ./gradlew lint

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Unit Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-artifacts
          path: |
            app/build/test-results/testDebugUnitTest/
            app/build/reports/tests/testDebugUnitTest/index.html

      - name: Publish Unit Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests
          path: app/build/test-results/testDebugUnitTest/*.xml
          reporter: junit

  instrumented-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: actions/setup-android@v2
        with:
          api-level: 33
          target: google_apis
          components: platform-tools,build-tools-33.0.0

      - name: Add platform tools to PATH
        run: echo "${ANDROID_HOME}/platform-tools" >> $GITHUB_PATH

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $ANDROID_SDK_ROOT
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Enable Gradle Daemon
        run: echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties

      - name: Download Dependencies
        run: ./gradlew dependencies

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Set up Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: Nexus 5X
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect
          disable-animations: true
          timeout: 600

      - name: Set up Firebase Credentials
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > $HOME/firebase_credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase_credentials.json" >> $GITHUB_ENV

      - name: Run Instrumented Tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Upload Instrumented Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: instrumented-test-artifacts
          path: |
            app/build/test-results/androidTest/connected/
            app/build/reports/androidTests/connected/index.html

      - name: Publish Instrumented Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Instrumented Tests
          path: app/build/test-results/androidTest/connected/*.xml
          reporter: junit
